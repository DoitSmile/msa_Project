version: "3.7"

services:
  my-user-database:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: "myuser"
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - 3308:3306
    env_file:
      - ./services/user/.env.docker

  my-board-database:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: "myboard"
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - 3309:3306
    env_file:
      - ./board/.env.docker

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    volumes:
      - ./api-gateway/src:/api-gateway/src
    ports:
      - 3000:3000

  auth-service: # module에 있는 host 이름이랑 같음
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    volumes:
      - ./services/auth/src:/auth-service/auth/src
      - ./shared:/auth-service/shared
    env_file:
      - ./services/auth/.env.docker

  user-service:
    build:
      context: ./services/user
      dockerfile: Dockerfile
    volumes:
      - ./services/user/src:/user-service/user/src
      - ./shared:/user-service/shared
    env_file:
      - ./services/user/.env.docker

  board-service:
    build:
      context: ./board
      dockerfile: Dockerfile
    volumes:
      - ./board/src:/board-service/src
      - ./shared:/board-service/shared
    env_file:
      - ./board/.env.docker

  # 컴퓨터이름
  my-auth-redis:
    image: redis:latest
    ports:
      - 6380:6379

  # signup-front:
  #   build:
  #     context: ./front/signup
  #     dockerfile: Dockerfile
  #   volumes:
  #     - ./front/signup/src:/front/signup

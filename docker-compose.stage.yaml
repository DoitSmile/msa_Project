version: "3.7"

services:
  my-user-database:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: "user"
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - 3308:3306
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"] # MySQL 데이터베이스 연결 확인
      interval: 10s
      timeout: 5s
      retries: 5

  my-post-database:
    image: mysql:latest
    environment:
      MYSQL_DATABASE: "post"
      MYSQL_ROOT_PASSWORD: "root"
    ports:
      - 3307:3306
    env_file:
      - ./services/post/.env.docker
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

  my-redis:
    image: redis:latest
    ports:
      - 6379:6379
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"] # Redis 서버 응답 확인
      interval: 10s
      timeout: 5s
      retries: 5

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - 3000:3000
    env_file:
      - ./services/user/.env.docker
    environment:
      - POST_SERVICE_URL=http://post-service:3003
      - USER_SERVICE_URL=http://user-service:3002
      - AUTH_SERVICE_URL=http://auth-service:3001
    networks:
      - app-network
    depends_on:
      - post-service
      - user-service
      - auth-service
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"] # API Gateway 서비스 응답 확인
      interval: 10s
      timeout: 5s
      retries: 5

  auth-service:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    env_file:
      - ./services/auth/.env.docker
    networks:
      - app-network
    environment:
      - PORT=3001
    depends_on:
      - my-auth-redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001"] # Auth 서비스 응답 확인
      interval: 10s
      timeout: 5s
      retries: 5

  user-service:
    build:
      context: ./services/user
      dockerfile: Dockerfile
    env_file:
      - ./services/user/.env.docker
    networks:
      - app-network
    environment:
      - PORT=3002
    depends_on:
      - my-user-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002"] # User 서비스 응답 확인
      interval: 10s
      timeout: 5s
      retries: 5

  post-service:
    build:
      context: ./services/post
      dockerfile: Dockerfile
    env_file:
      - ./services/post/.env.docker
    environment:
      - REDIS_URL=redis://my-redis:6379
      - PORT=3003
    depends_on:
      - my-redis
      - my-post-database
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3003"] # Post 서비스 응답 확인
      interval: 10s
      timeout: 5s
      retries: 5

  my-auth-redis:
    image: redis:latest
    ports:
      - 6380:6379
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - 8080:80
    depends_on:
      - api-gateway
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"] # Frontend 서비스 응답 확인
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge
